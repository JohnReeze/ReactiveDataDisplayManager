//
//  BaseDataDisplayManager.swift
//  SampleEventHandling
//
//  Created by Alexander Kravchenkov on 01.08.17.
//  Copyright ¬© 2017 Alexander Kravchenkov. All rights reserved.
//

import Foundation
import UIKit

/// –°–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—É—é –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—é DataManager –∏ DisplayManager.
/// –£–º–µ–µ—Ç —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∏–±—ã –µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω–æ, –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å EstimatedHeightRowHeight, heightForRow. 
/// –£–º–µ–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
/// –ò–¥–µ—è –≤ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–∫—Ä—ã—Ç—å —Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–æ–Ω –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞ –Ω–∞–ø–∏—Å–∞–Ω, –ø—Ä–æ—Å—Ç–æ –Ω–∞ —Å–∫–æ—Ä—É—é —Ä—É–∫—É - –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)
/// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏—ã–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Ç–æ –º–æ–∂–Ω–æ –ª–∏–±–æ —Å–∞–±–∫–ª–∞—Å–∏—Ç—å, –ª–∏–±–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π - –Ω–µ –≤–∞–∂–Ω–æ, –≥–ª–∞–≤–Ω–æ–µ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã üí™
public class BaseTableDataDisplayManager: NSObject, TableDataManager, TableDisplayManager {

    // MARK: - Events

    /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ —Ç–∞–±–ª–∏—Ü—ã
    public var scrollEvent = BaseEvent<UITableView>()

    // MARK: - Fileprivate properties

    fileprivate var cellGenerators: [TableCellGenerator]
    fileprivate var sectionHeaderGenerator: [ViewGenerator]
    fileprivate weak var tableView: UITableView?
    fileprivate let estimatedHeight: CGFloat

    // MARK: - Initialization and deinitialization

    public init(estimatedHeight: CGFloat = 40) {
        self.estimatedHeight = estimatedHeight
        self.cellGenerators = [TableCellGenerator]()
        self.sectionHeaderGenerator = [ViewGenerator]()
        super.init()
    }

    // MARK: - Public methods

    public func addSectionHeaderGenerator(_ generator: ViewGenerator) {
        self.sectionHeaderGenerator.append(generator)
    }

    public func addCellGenerator(_ generator: TableCellGenerator, needRegister: Bool = true) {
        if needRegister {
            self.tableView?.registerNib(generator.identifier)
        }
        self.cellGenerators.append(generator)
    }

    public func setTableView(_ tableView: UITableView) {
        self.tableView = tableView
        self.tableView?.delegate = self
        self.tableView?.dataSource = self
        self.tableView?.separatorStyle = .none
    }

    public func scrollViewDidScroll(_ scrollView: UIScrollView) {
        guard let guardTable = self.tableView else { return }
        self.scrollEvent.invoke(with: guardTable)
    }
}

/// MARK: - UITableViewDelegate

extension BaseTableDataDisplayManager: UITableViewDelegate {

    public func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableViewAutomaticDimension
    }

    public func tableView(_ tableView: UITableView, estimatedHeightForRowAt indexPath: IndexPath) -> CGFloat {
        return self.estimatedHeight
    }
}

// MARK: - UITableViewDataSource

extension BaseTableDataDisplayManager: UITableViewDataSource {

    public func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        if section > self.sectionHeaderGenerator.count - 1 {
            return nil
        }

        return self.sectionHeaderGenerator[section].generate()
    }

    public func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.cellGenerators.count
    }

    public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        return self.cellGenerators[indexPath.row].generate(tableView: tableView, forIndexPath: indexPath)
    }
}
